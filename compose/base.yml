version: '3.9'

volumes:
  postgres:
  redis:
  minio:

services:
  varnish:
    build: ../docker/varnish

    ports:
      - ${VARNISH_PORT:?}:80

    tmpfs:
      - /var/lib/varnish:exec

    depends_on:
      - rails
      - minio

  rails: &rails
    build:
      context: ..

      args:
        APP_GID:
        APP_UID:
        OPENID_CLIENT_ID:
        OPENID_CONFIGURATION_ENDPOINT:

    environment:
      DATABASE_URL:                postgresql://postgres@postgres/mssform
      GOOGLE_ACCOUNT_TYPE:         service_account
      GOOGLE_CLIENT_EMAIL:
      GOOGLE_CLIENT_ID:
      GOOGLE_PRIVATE_KEY:
      MEMCACHE_SERVERS:            memcached
      MINIO_ACCESS_KEY_ID:
      MINIO_BUCKET:                uploads
      MINIO_ENDPOINT:
      MINIO_SECRET_ACCESS_KEY:
      MSS_WORKING_LIST_SHEET_ID:
      MSS_WORKING_LIST_SHEET_NAME:
      OPENID_CLIENT_ID:
      PIDFILE:                     /tmp/server.pid
      REDIS_URL:                   redis://redis
      SECRET_KEY_BASE:
      SMTP_ADDRESS:
      SMTP_AUTHENTICATION:
      SMTP_DOMAIN:
      SMTP_PASSWORD:
      SMTP_PORT:
      SMTP_USERNAME:
      STAGE:
      SUBMISSIONS_DIR:             /app/submissions

    depends_on:
      - postgres
      - redis
      - memcached
      - minio

  sidekiq:
    <<: *rails
    command: ["bundle", "exec", "sidekiq"]

  postgres:
    image: postgres:14

    environment:
      POSTGRES_DB:               mssform
      POSTGRES_HOST_AUTH_METHOD: trust

    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    image: redis:6
    command: ["--appendonly", "yes"]

    volumes:
      - redis:/data

  memcached:
    image: memcached:latest

  minio:
    image: minio/minio:latest
    command: ["server", "/data", "--console-address", ":9001"]

    environment:
      MINIO_ROOT_USER:
      MINIO_ROOT_PASSWORD:

    volumes:
      - minio:/data
